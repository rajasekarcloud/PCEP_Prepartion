What will be the output after the following code snippet?

tup = (1, 2, 4, 8)
tup = tup[1:-1]
tup = tup[1]
print(tup)
--------------------------------------------------------------------------------
What will be the output of the following code?

tup_a = (0, 1, 2)
tup_b = (2, 3, 4)
list_c = []
for el in tup_a:
        if el not in tup_b:
                list_c.append(el)
print(list_c)
--------------------------------------------------------------------------------
How many percentage (%) signs will be printed after the following code snippet?

for i in range(2):
        print ('%')
else:
        print('%')

--------------------------------------------------------------------------------
list1 = [1, 2, 3];
print(list1[-1]); # Print 3
print(list1[1:-1]); # Print 2
print(list1[-3]);  # Print 3
print(list1[-3:-1]); # Print [1,2]
--------------------------------------------------------------------------------
What will be the output of the following code?

def check(x):
    if (x[0] == x[-1]):
        return True
    else:
        return False
 
print(check([10, 20, 30, 40, 10]))
print(check([40, 20, 30, 40, 10]))
--------------------------------------------------------------------------------
What will be the output when the user provides the number 0?

num = int(input('give a number: '))
if num > 0:
    if num < 5:
        print('1')
    else:
        print('2')
else:
        if num < -1:
                print('3')
        else:
                print('4')

--------------------------------------------------------------------------------
What will be the output of the following code snippet?

def func(x):
        if x:
                print('1')
        elif x is False:
                print('2')
        else:
                print('3')
 
func(None)

--------------------------------------------------------------------------------
What will be the output of the following program when the user enters the letter a?

try:
  val = int(input('Provide a number: '))
  print(val/val)
except TypeError:
  print('a')
except ValueError:
  print('b')
except ZeroDivisionError:
  print('c')
except:
  print('d')

--------------------------------------------------------------------------------
What will be the output of the following code snippet?

dict1 = {'one': 1, 'two': 2, 'three': 3};
dict2 = {'one': 1, 'two': 5, 'four': 8};
print(dict(dict1)); # {'one': 1, 'two': 2, 'three': 3}
dict3 = dict(dict1);
dict4 = dict(dict2);
print(dict3); # {'one': 1, 'two': 2, 'three': 3}
print(dict4); # {'one': 1, 'two': 5, 'four': 8}
dict3.update(dict2);
dict4.update(dict1);
print(dict3); # {'one': 1, 'two': 5, 'three': 3, 'four': 8}
print(dict4); # {'one': 1, 'two': 2, 'four': 8, 'three': 3}
print(dict3 == dict4)
--------------------------------------------------------------------------------
What will be the output of the following code?

def boo(x):
        if x == 1:
                return x
        return x * boo(x-1)
 
print(boo(3))
--------------------------------------------------------------------------------
What will be the output of the following snippet?

def show_truth():
    mysterious_var = ['New Surprise!']
    print(mysterious_var)
 
mysterious_var = ['Surprise!']
print(mysterious_var)
show_truth()
print(mysterious_var)
--------------------------------------------------------------------------------
What will be the output of the following code?

for a in range(1, 3):
        for b in range(1, 3):
                if a > b:
                        continue
                else:
                        print(a * b)
--------------------------------------------------------------------------------
What will be the output after the following code snippet?

temp = [[3 - i for i in range(2)] for j in range(3)] ;
print(temp);
# Equivalent to
for j in range(3):
    for i in range(2):
        print(3-i);
--------------------------------------------------------------------------------
What will be the output of the following code?

x = 4
y = 5
z = 3
print(x == y or z)
--------------------------------------------------------------------------------
What will be the output after the following code snippet?

age = 30
new_age = age
new_age -= 2
age += 2
print(age, new_age)
--------------------------------------------------------------------------------
What will be the output of the following code?

for i in range(5):
        print(i, end='-')
--------------------------------------------------------------------------------
What will be the output of the following code?

print(1 | 0 ^ 1 & ~0)
--------------------------------------------------------------------------------
What will be the output after the user enters 0?

user_input = int(input('What is your value? '))
print(1/user_input)

0 -> ZeroDivisionError: division by zero
O -> ValueError: invalid literal for int() with base 10: 'O'
--------------------------------------------------------------------------------
What will be the output after the following? print(0o1 + 0b1 + 0x1 + 1)
# To specify an octal integer, you can use the `0o` prefix followed by the octal digits

--------------------------------------------------------------------------------
What will be the output of the following code?

if 5 == 5.0:
        print('yes')
else:
        print('no')
--------------------------------------------------------------------------------
How many at signs (@) will be printed after the following code snippet?

a = 0
while a <= 5:
        a += 2
        print('@')
--------------------------------------------------------------------------------
What will be the output of the following code?

def myfunc():
        print(num + 1, end='')
 
num = 5
myfunc()
print(num)
--------------------------------------------------------------------------------
How many times will the x sign be printed?

for a in range(1,3):
        for b in range(1, 8):
                if a == b:
                        print('x')

--------------------------------------------------------------------------------
Given the following code, what will be the output when the user enters two numbers, first 13 and then 3?

a = int(input('First number: '))
b = int(input('Second number: '))
 
a = a % b
b = b % a
 
print(a, b)
--------------------------------------------------------------------------------
print(1/2); # 0.5
print(1//2); # 0
The division operation (/) always returns a float.
print(1/1); # 1.0

first_name = 'John'
print(sep=' - ', 'Your first name is', first_name, 'Welcome!') # SyntaxError: positional argument follows keyword argument
--------------------------------------------------------------------------------
x = 0
y = 1
print(x ^ y); # Invert of multiple except 0 ^ 0 -> 0
print(x | y); # OR
print(x & y); #Multiply
a = x ^ y
b = x | y
c = x & y
print(a + b + c)
--------------------------------------------------------------------------------
# Left shift is 2^1
print(12 << 1); # 2^1 -> 2 * 12 = 24
print(12 << 2); # 2^2 -> 4 * 12 = 48
# Right shift divide by 2 to the near round
print(12 >> 2); # 12/2 = 6, 6/3 = 2; We do it 2 times as we are right shift >> 2
print(18 >> 2); # 18/2 = 9, 9/2 = 4;
print(20 >> 4); # 20/2 = 10; 10/2 = 5, 5/2 = 2, 2/2 = 1; We do it 4 times as we are right shift >> 4
--------------------------------------------------------------------------------
Variable declared outside the function has scope inside the function.

Variable inside the function is LOCAL - This can be overriden by the keyword called "global".
Varaible outside the function is GLOBAL.

def show_truth():
    print(mysterious_var);
show_truth();

# NameError: name 'mysterious_var' is not defined
--------------------------------------------------------------------------------
def show_truth():
    print(mysterious_var);
mysterious_var = "Surprise!";
show_truth();

Variable declared outside the function has scope inside the function.
--------------------------------------------------------------------------------
def show_truth():
    mysterious_var = "New Surprise !!";
    print(mysterious_var);
mysterious_var = "Surprise!";
show_truth();
print(mysterious_var);
--------------------------------------------------------------------------------
print("Hi")print("Bye"); # SyntaxError: invalid syntax

Python cannot have more than one syntax in a line

---------------------------------------------------------------------------------

# Write a function named unique.
# The function should accept one parameter, which is a list with any number of elements inside.
# The default value for the parameter should be an empty list ([]).
# The function should return a new list with all duplicate elements removed. The function should preserve the original order of elements.
def unique(list):
    uniq_list=[];
    for i in list:
        if i not in uniq_list:
            uniq_list.append(i);
    return uniq_list;
print(unique([1, 1, 4, 5, 1]));
---------------------------------------------------------------------------------
print("Hi","Welcome"); # Output: Hi Welcome # Python adds "space" when there is a "," added.
---------------------------------------------------------------------------------
Age=10;
AGE=20;
print(Age,AGE);

Both the variables are different.
---------------------------------------------------------------------------------
i = 0
while i <= 10:
    i += 1
    if i % 2 == 0:
        break
    print('*')

# Output= *
# In the first iteration, we increase i to 1. The if-condition is not met, so we print a star. 
# In the second iteration, i = 2, the if-condition is satisfied, so we immediately exit the loop.
---------------------------------------------------------------------------------
values = [[3 - x for x in range(2)] for y in range(5)];
print(values); # [[3, 2], [3, 2], [3, 2], [3, 2], [3, 2]]
sum = 0.0;
for row in values:
    print(row);
    for cell in row:
        print(cell);
        sum += cell

print(sum);

Ans: 25.0
---------------------------------------------------------------------------------
cities = ['Warsaw', 'Cracow', 'Gdansk', 'Szczebrzeszyn Dolny'];
print(cities[:]) # Prints entire list
del(cities[:]); # Deletes entire list
print(cities[:]) # []

---------------------------------------------------------------------------------
my_list = [0, 1, 2] * 3 + [0]
print(my_list);
print(len(my_list));

# [0, 1, 2, 0, 1, 2, 0, 1, 2, 0]
# Length: 10
---------------------------------------------------------------------------------
What will happen after running the following program?

fav_band = 'Green Day'
fav_band[6] = 'M'
# Strings are immutable in Python and you can't change individual characters inside them
---------------------------------------------------------------------------------
#Elements separated by commas without square brackets create a tuple in Python.
numbers = 1, 2, 3;
print(type(numbers));

<class 'tuple'>
---------------------------------------------------------------------------------
vals = (1, 2, 3, 4);
print(vals[1:-1]); # Starting from index 1 and excluding -1(last element) (2,3) - Tuple
vals = [1,2,3,4];
print(vals[1:-1]); # [2,3] List
vals = vals[1:-1];
vals = vals[1]; 
print(vals); # 3

---------------------------------------------------------------------------------

print(3**0) # 1
print(1/3) # 0.33
print(1//3) # 0
print(1%3); # 1
print(1//3*3**0); # 0

print(3//2); #
# - and + in the same line. They are same precedence. Start from left to right
print(4-3//2+1); # 4
---------------------------------------------------------------------------------
val =  1_000_000; # Underscores are here to make the number (one million in this case) easier to read.
print(0%2); #0 # x=0,y=2 if x>y then answer is x
print(1%2); #1
print(3%2);

angle=0;
for i in range(5):
    if i%2 == 1:
        angle +=1;
else:
    angle-=1;
print(angle);

# BREAK
power=1;
while power < 5:
    power +=1;
    print("@",end="");
    if power == 3:
        break;
else:
    print("@");

#
answers = (True,False, True);
print(answers[2:]); # True
selections = answers[-2:];
print(selections[-1]); # True
if selections:
    print("True");

---------------------------------------------------------------------------------
An interpreter executes source code directly line-by-line, without compiling it into machine code.
print(1//3 * 3 ** 0);# 1//3 * 1 -? 1//3 -> 0
print(1-2//3+4); # 2//3 -> 0; 1-0+4 -> Left to right 5
print(4-3//2+1); # 4-1+1 -> 4
print(1**2/2 //3); # 1**2 -? 1/2//3 -> 0.5//3 -> 0.0
print(1+1//2*3); # 1+1//6 -> 1+0 -> 1
print(3//2-2); # -1
print(0%2); # 0
print(1%2);# 1 1<2 then its 1
################################
others=-1;
for i in range(1,3):
    for j in range(1,2):
        if i == j:
            others +=1;
    else:
        others +=1;
print("Others:",others);
################################
the_data = ['data',-1,2.7];
print('data' in the_data);
print(the_data[1] not in the_data);
################################
answers=(True,True,False,1,2);
print(len(answers));
print(answers[3:]); # () - Empty - Not index error in tuple
print(answers[-2:]);# (True, False)
#############
power = 2;
while power < 5:
    power +=1;
    if power == 3:
        print(power);
        print("----");
        continue; # Continue the loop does not go to next line of instrction.

    print(power,"@");
else:
    print("Else","@");
##################
numbers = [1,0.5,0.25,0.125];
print(numbers[1])
##################
def sample(value):
    return total - value;
total = 4;
total = sample(2);
total = sample(1);
print(total);
##################
def walk(top):
    if top == 0:
        return 0;
    else:
        return top * walk(top-1);

print(walk(2));




